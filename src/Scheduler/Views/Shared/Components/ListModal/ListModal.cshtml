@using System.Text.Json;

@{
    IEnumerable<Event> events = this.ViewData["Events"] as IEnumerable<Event> ?? Enumerable.Empty<Event>();
    IEnumerable<Team> teams = this.ViewData["Teams"] as IEnumerable<Team> ?? Enumerable.Empty<Team>();

    string title = this.ViewData["Title"] as string ?? string.Empty;

    DateTime startTime = Convert.ToDateTime(this.ViewData["Start"]);
    DateTime endTime = Convert.ToDateTime(this.ViewData["End"]);
}

<link rel="stylesheet" href="~/css/Calendar.css" asp-append-version="true" />

<div class="modal fade" id="listModalPopup" tabindex="-1" aria-hidden="false">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header noPrintIfModal">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <h2 class="mb-4">@title</h2>
                    <div class="btn-group mb-2 noPrintIfModal">
                        <form class="me-3" action="javascript:void(0);" onsubmit="filterEvents(this)" id="filterForm" autocomplete="off">
                            <div>               
                                <div class="linkElement">
                                    <button type="button" class="button buttonRed" onclick="showModalDropdown()" data-bs-auto-close="false" aria-expanded="false">Filter Results</button>
                                    <button class="button buttonRed" type="reset" onclick="resetEvents()">Reset Filter</button>
                                </div>
                                <ul class="dropdown-menu p-3" style="width:120%" id="listModalDropdown">
                                    <h5 class="lead text-danger text-center">Filter Criteria <i class="bi bi-question-circle calendar-full" data-bs-toggle="tooltip" data-bs-placement="right" title="Choose options below to filter your results."></i></h5>
                                    <div class="mb-3">
                                        <label class="form-label">Event Type</label>
                                        <select name="type" class="form-select">
                                            <option value="Event">Events</option>
                                            <option value="Non-Team Event">Non-Team Events</option>
                                            <option value="Practice">Practices</option>
                                            <option value="Game">Games</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Event Name</label>
                                        <input type="text" name="searchTerm" class="form-control" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Team Name</label>
                                        <select id="teamNameFilter" name="teamName" class="form-select chosen">
                                            <option value=""></option>
                                            @foreach (Team t in teams)
                                            {
                                                <option value=@t.Name>@t.Name</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="text-center">
                                        <div class="linkElement">
                                            <input type="submit" class="button buttonYellow" value="Search" />
                                            <button type="button" class="button buttonRed" onclick="closeDropdown()">Close</button>
                                        </div>
                                    </div>
                                </ul>
                            </div>
                        </form>
                    </div>
                </div>
                <div id="listModalTable" class="table-responsive w-100 m-auto">
                    <partial name="_ListModalTable" model="events"/>
                </div>
            </div>
            <div class="modal-footer noPrintIfModal">
                <div class="linkElement">
                    @if (this.User.Identity is not null &&
                         this.User.Identity.IsAuthenticated &&
                         startTime.Day == endTime.Day)
                    {
                        <button class="button buttonYellow calendar-mobile" data-bs-dismiss="modal" onclick="gridModal(@startTime.Year, @startTime.Month, @startTime.Day)">Scheduling Grid</button>
                    }

                    <button class="button buttonYellow calendar-full" onclick="window.print()">Print These Results</button>
                    <button type="button" class="button buttonRed" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function (){
        $("#listModalPopup").modal("show");
    });

    function showModalDropdown() {
        $('#listModalDropdown').addClass('show');
    }

    function closeDropdown() {
        $('#listModalDropdown').removeClass('show');
    }

    $(document).ready(function () {
        $("#teamNameFilter").select2({
            placeholder: "Start typing to select a Team...",
            width: "100%",
            dropdownParent: $('#listModalPopup')
        });
    });
    
    function filterEvents(e){
        $.ajax({
            url: '@this.Url.Action("filterModalEvents", "Dashboard")',
            data: {
                searchTerm: e.searchTerm.value,
                type: e.type.value,
                start: '@startTime.ToString()',
                end: '@endTime.ToString()',
                teamName: e.teamName.value
            },
            success: function(data) {
                $("#listModalTable").html(data);
                $('#listModalDropdown').removeClass('show');
            }
        });
    }

    function resetEvents(e){
        $.ajax({
            url: '@this.Url.Action("filterModalEvents", "Dashboard")',
            data: {
                searchTerm: '',
                type: 'Event',
                start: '@startTime.ToString()',
                end: '@endTime.ToString()',
                teamName: ''
            },
            success: function(data) {
                $("#teamNameFilter").val(null).trigger('change');
                $("#listModalTable").html(data);
            }
        });
    }

    function gridModal(year, month, date) {
        $.ajax({
            url: '@this.Url.Action("gridModal", "Dashboard")',
            data: {
                year: year ?? new Date().getFullYear(),
                month: month ?? new Date().getMonth(),
                date: date ?? new Date().getDate()
            },
            success: function (data) {
                $("#gridmodal").html(data);
            }
        });
    }

    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>

<style>
    .custom-tooltip .tooltip-inner {
        max-width: 500px;
    }
</style>

<style media="print">
    .noPrintIfModal {
        display: none;
    }

    html, body {
        height: 100%;
        overflow: hidden;
    }
</style>