@{
    IEnumerable<Event> events = (IEnumerable<Event>)this.ViewData["Events"];
    IEnumerable<Team> teams = (IEnumerable<Team>)this.ViewData["Teams"];
    string title = this.ViewData["Title"].ToString();
}

<div class="modal fade" id="modalPopup" tabindex="-1" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2>@title</h2>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @{
                    foreach (Event scheduledEvent in events){
                        <a asp-action="Details" asp-controller="Schedule" asp-route-id="@scheduledEvent.Id" class="list-group-item list-group-item-action border-3 border-secondary mb-3">
                            <div class="d-flex w-100 justify-content-between">
                                <h5>@scheduledEvent.Name</h5>
                                <small>
                                    @this.Html.DisplayFor(x => scheduledEvent.StartDate)
                                    to
                                    @this.Html.DisplayFor(x => scheduledEvent.EndDate)
                                </small>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <h6>Location</h6>
                                    @if (scheduledEvent.IsBlackout == true)
                                    {
                                        <p>Entire Facility</p>
                                    }
                                    else
                                    {
                                        <small>@string.Join(", ", scheduledEvent.Fields.Select(f => f.Name))</small>
                                    }
                                </div>
                                <div class="col-6">
                                    @if (scheduledEvent is Practice practice)
                                    {
                                        Team? team = teams.FirstOrDefault(t => t.Id == practice.TeamId);

                                        if (team is not null)
                                        {
                                            <h6>Practicing Team</h6>
                                            <small>@team.Name</small>
                                        }
                                    }
                                    else if (scheduledEvent is Game game)
                                    {
                                        Team? homeTeam = teams.FirstOrDefault(t => t.Id == game.HomeTeamId);
                                        Team? opposingTeam = teams.FirstOrDefault(t => t.Id == game.OpposingTeamId);

                                        if (homeTeam is not null &&
                                        opposingTeam is not null)
                                        {
                                            <h6>Teams</h6>
                                            <small>@homeTeam.Name vs. @opposingTeam.Name</small>
                                        }
                                    }
                                </div>
                            </div>
                        </a>
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function (){
        $("#modalPopup").modal("show");
    })
</script>