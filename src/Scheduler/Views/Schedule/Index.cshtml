@using System.Security.Claims;
@using Scheduler.Domain.Repositories;
@using Scheduler.Domain.Services;
@using Scheduler.Domain.Specifications;
@using Scheduler.Domain.Specifications.Fields;

@inject IFieldRepository FieldRepository
@inject IDateProvider DateProvider

@model Event

@{
    this.ViewData["Title"] = "Schedule";

    const string DATE_FORMAT = "yyyy-MM-ddTHH:mm";
    bool isAdmin = this.User.IsInRole(Role.ADMIN);

    string eventType = this.ViewData["EventType"] as string
        ?? (isAdmin
            ? nameof(Event)
            : nameof(Practice));

    Specification<Field> fieldSpec = this.Model.FieldId is null
        ? new GetAllSpecification<Field>()
        : new ByIdSpecification<Field>((Guid)this.Model.FieldId);

    IEnumerable<SelectListItem> fields = (await this.FieldRepository
        .SearchAsync(fieldSpec))
        .Select(f => new SelectListItem
        {
            Text = f.Name,
            Value = f.Id.ToString()
        });
}

<div class="row">
    <div class="col-12 px-sm-5">
        <form id="eventForm" method="post">
            <div class="row mb-3">
                <h1 class="text-center">
                    @this.ViewData["Title"] <span id="title"></span>
                </h1>
                <hr />
            </div>

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row mb-3">
                <div class="col-sm-6">
                    <input title="Current user" hidden asp-for="UserId" value="@this.User.FindFirst(ClaimTypes.NameIdentifier)!.Value" />

                    <div class="list-group list-group-horizontal mb-3">
                        @if (isAdmin)
                        {
                            <button type="button"
                                    id="Event"
                                    onclick="navClick('Event')"
                                    class="list-group-item list-group-item-action text-center">
                                Event
                            </button>
                        }
                        <button type="button"
                                id="Practice"
                                onclick="navClick('Practice')"
                                class="list-group-item list-group-item-action text-center">
                            Practice
                        </button>
                        <button type="button"
                                id="Game"
                                onclick="navClick('Game')"
                                class="list-group-item list-group-item-action text-center">
                            Game
                        </button>
                    </div>

                    <partial name="Forms/_EventInputs" />

                    <div id="eventInputs"></div>
                </div>
                <div class="col-sm-6">
                    <div class="row mb-3">
                        <div class="col-6">
                            @if (isAdmin)
                            {
                                <label asp-for="FieldId" class="form-label">Field <i class="bi bi-question-circle" data-bs-custom-class="custom-tooltip" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" title="Please select one Field from the List.<br><br>For regular Events, you can use the Blackout Facility option to choose ALL Fields."></i></label>
                            }
                            else
                            {
                                <label asp-for="FieldId" class="form-label">Field <i class="bi bi-question-circle" data-bs-toggle="tooltip" data-bs-placement="top" title="Please select one Field from the List."></i></label>
                            }
                            @if (Model.FieldId != null)
                            {
                                <select data-val="false" class="form-select" asp-for="FieldId" id="fieldSelect" asp-items="fields"></select>
                            }
                            else
                            {
                                <select data-val="false" class="form-select" asp-for="FieldId" id="fieldSelect">
                                    <option value=""></option>
                                    @foreach (SelectListItem f in fields)
                                    {
                                        <option value=@f.Value>@f.Text</option>
                                    }
                                </select>
                            }
                            
                            <span asp-validation-for="FieldId" class="text-danger"></span>
                        </div>
                        <div class="col-6">
                            <label style="visibility: hidden" class="form-label">Blackout</label>
                            <div id="blackoutInputs">
                                @if (this.User.IsInRole(Role.ADMIN) &&
                                     eventType == nameof(Event))
                                {
                                    <partial name="Forms/_BlackoutInputs" />
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-lg">
                        <label class="form-label">Event Time <i class="bi bi-question-circle" data-bs-custom-class="custom-tooltip" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" title="<b>To use the PCYS Date Picker:</b><br /><br /><b>Picking a single date:</b> Click twice on the desired day.<br /><br /><b>Picking a range of days:</b> Click once on the starting day, then click on the ending day. The highlight between the days will show the range.<br /><br /><b>Adjusting times:</b> Use the dropdowns at the bottom. The starting time is on the left, the ending time is on the right.<br /><br />Once the desired dates and times are selected and shown at the bottom, click 'Apply' and confirm that the desired dates and times show in the resulting box.<br /><br />Do not click outside of the datepicker box without clicking 'Apply' or the new dates and times will <u>not</u> be applied."></i></label>
                        <input type="text" title="Event Time" name="daterange" class="text-center form-control" />
                    </div>
                    <div>
                        <input asp-for="StartDate" type="hidden" id="StartDate" />
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                        <br />
                    </div>
                    <div>
                        <input asp-for="EndDate" type="hidden" id="EndDate" />
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                    </div>
                    <div class="row ms-3 mb-3">
                        <div class="form-check mb-3">
                            <input type="checkbox" title="Repeating event?" checked="@(this.Model is not null && this.Model.Recurrence is not null)" class="form-check-input" id="recurrenceCheck">
                            <label class="form-check-label">Repeating <i class="bi bi-question-circle" data-bs-toggle="tooltip" data-bs-placement="right" title="Use this to schedule your Event to repeat for a set number of Occurrences: Daily, Weekly, or Monthly."></i></label>
                        </div>
                        <div id="recurrenceInputs">
                            @if (this.Model is not null &&
                                 this.Model.Recurrence is not null)
                            {
                                <partial name="Forms/_RecurrenceInputs" />
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-6 linkElement">
                    <a asp-action="Events"
                       asp-controller="Dashboard"
                       class="button buttonRedOutline w-100">
                        Cancel
                    </a>
                </div>
                <div class="col-6 linkElement">
                    <input type="submit" class="formSubmit button buttonYellow w-100" />
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {    
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/RecurrenceForm.js"></script>
    <script src="~/js/EventForm.js"></script>
    <script>
        document.onload = navClick('@eventType');

        $("#fieldSelect").select2({
            placeholder: "Start typing to select a Field...",
            width: "100%"
        });

        var startDateString = "@this.Model.StartDate.ToString(DATE_FORMAT)";
        var endDateString = "@this.Model.EndDate.ToString(DATE_FORMAT)";
        var minDateString = "@this.DateProvider.Now.ToString(DATE_FORMAT)";

        var startDate = moment(startDateString, "YYYY-MM-DDTHH:mm");
        var startDateFormatted = startDate.format('M/DD/YYYY hh:mm A');
        var endDate = moment(endDateString, "YYYY-MM-DDTHH:mm");
        var endDateFormatted = endDate.format('M/DD/YYYY hh:mm A');
        var minDate = moment(minDateString, "YYYY-MM-DDTHH:mm");
        var minDateFormatted = minDate.format('M/DD/YYYY hh:mm A');

        $('#StartDate').val(startDateFormatted);
        $('#EndDate').val(endDateFormatted);

        $('input[name="daterange"]').daterangepicker({
            timePicker: true,
            startDate: startDateFormatted,
            endDate: endDateFormatted,
            minDate: minDateFormatted,
            timePickerIncrement: 30,
            drops: "down",
            locale: {
                format: 'M/DD hh:mm A'
            }
        }).on('apply.daterangepicker', function (ev, picker) {
            startDateFormatted = picker.startDate.format('M/DD/YYYY hh:mm A');
            endDateFormatted = picker.endDate.format('M/DD/YYYY hh:mm A');
            $('#StartDate').val(startDateFormatted);
            $('#EndDate').val(endDateFormatted);
        });
    </script>
}

