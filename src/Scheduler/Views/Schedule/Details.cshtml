@using Microsoft.EntityFrameworkCore;
@using Scheduler.Infrastructure.Persistence;
@using System.Security.Claims;
@using System.Text;

@inject SchedulerContext Scheduler
@model Event

@{
    this.ViewData["Title"] = "Reschedule Event";
    this.ViewBag.Today = DateTime.Now.ToString("yyyy-MM-ddTHH:mm");

    string eventType = this.Model.GetType().Name;

    IEnumerable<SelectListItem> fieldList = this.Scheduler.Fields
        .Select(f => new SelectListItem
        {
            Text = f.Name,
            Value = f.Id.ToString()
        })
        .ToList();
}

<div class="row">
    <div class="col-sm-6 mx-auto">
        <div class="mb-3">
            <a asp-action="Events" asp-controller="Dashboard" class="btn btn-sm btn-danger">
                < Back
            </a>
        </div>

        <form method="post" action="">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input hidden asp-for="Id" value="@this.Model.Id" />
            <input hidden asp-for="UserId" value="@this.User.FindFirst(ClaimTypes.NameIdentifier)!.Value" />

            <ul class="list-group">
                <li class="list-group-item">
                    <div class="d-flex justify-content-between w-100">
                        <h5>@eventType Details</h5>
                        <button type="button" class="btn btn-sm btn-secondary" data-bs-toggle="modal" data-bs-target="#detailsModal">
                            Edit
                        </button>
                        <div class="modal fade" id="detailsModal" tabindex="-1" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">@this.Model.Name Details</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="mb-3">
                                            <label asp-for="Name" class="form-label h6"></label>
                                            <input asp-for="Name" class="form-control" />
                                            <span asp-validation-for="Name" class="text-danger"></span>
                                        </div>

                                        @if (eventType != nameof(Event))
                                        {
                                            <partial name="Forms/_@(eventType)Inputs" />
                                        }
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                                        <input asp-action="EditDetails" asp-controller="@eventType" type="submit" value="Submit" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <h6>Name</h6>
                            @this.Model.Name
                        </div>
                        <div class="col-6">
                            @if (this.Model is Practice practice)
                            {
                                Team? team = await this.Scheduler.Teams.FindAsync(practice.TeamId);
                                
                                if (team is not null)
                                {                                
                                    <h6>Team</h6>
                                    <small>@team.Name</small>
                                }
                            }
                            else if (this.Model is Game game)
                            {
                                Team? homeTeam = await this.Scheduler.Teams.FindAsync(game.HomeTeamId);
                                Team? opposingTeam = await this.Scheduler.Teams.FindAsync(game.OpposingTeamId);

                                if (homeTeam is not null &&
                                    opposingTeam is not null)
                                {
                                    <h6>Teams</h6>
                                    <small>
                                        @homeTeam.Name
                                        vs.
                                        @opposingTeam.Name
                                    </small>
                                }
                            }
                        </div>
                    </div>
                </li>
                <li class="list-group-item">
                    <div class="d-flex justify-content-between w-100">
                        <h5>Date</h5>
                        <div class="d-grid gap-2 d-md-block">
                            <button type="button" class="btn btn-sm btn-secondary" data-bs-toggle="modal" data-bs-target="#rescheduleModal">Reschedule</button>
                            <div class="modal fade" id="rescheduleModal" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Reschedule Event</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="row mb-3">
                                                <div class="col-6">
                                                    <label asp-for="StartDate" class="form-label"></label>
                                                    <input asp-for="StartDate" min=@this.ViewBag.Today type="datetime-local" class="form-control" />
                                                    <span asp-validation-for="StartDate" class="text-danger"></span>
                                                </div>
                                                <div class="col-6">
                                                    <label asp-for="EndDate" class="form-label"></label>
                                                    <input asp-for="EndDate" min=@this.ViewBag.Today type="datetime-local" class="form-control" />
                                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <div class="form-check mb-3">
                                                    <input checked="@(this.Model.Recurrence is not null)" type="checkbox" class="form-check-input" id="recurrenceCheck">
                                                    <label class="form-check-label">Repeating?</label>
                                                </div>
                                                <div id="recurrenceInputs">
                                                    @if (this.Model.Recurrence is not null)
                                                    {
                                                        <partial name="Forms/_RecurrenceInputs" />
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Back</button>
                                            <input asp-action="Reschedule" asp-controller="@eventType" type="submit" value="Reschedule" class="btn btn-primary" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button type="button" class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#cancelModal">
                                Cancel
                            </button>
                            <div class="modal fade" id="cancelModal" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Cancel @eventType</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            Are you sure you want to cancel <b>@this.Model.Name</b>?
                                            It and all recurrences will be permanently removed.
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Back</button>
                                            <input asp-action="Cancel" asp-controller="@eventType" type="submit" value="Cancel" class="btn btn-danger" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-6">
                            <h6>Starts</h6>
                            @this.Html.DisplayFor(x => x.StartDate)
                        </div>
                        <div class="col-6">
                            <h6>Ends</h6>
                            @this.Html.DisplayFor(x => x.EndDate)
                        </div>
                    </div>
                </li>
                <li class="list-group-item">
                    <div class="d-flex justify-content-between w-100">
                        <h5>Location</h5>
                        <button type="button" class="btn btn-sm btn-secondary" data-bs-toggle="modal" data-bs-target="#relocateModal">
                            Relocate
                        </button>
                        <div class="modal fade" id="relocateModal" tabindex="-1" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Relocate Event</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="form-check mb-3">
                                            <input asp-for="IsBlackout" type="checkbox" class="form-check-input">
                                            <label asp-for="IsBlackout" class="form-check-label">Blackout Facility?</label>
                                        </div>
                                        <div class="mb-3">
                                            <label asp-for="FieldIds" class="form-label"></label>
                                            <select asp-for="FieldIds" asp-items="fieldList" class="form-select" multiple size="6"></select>
                                            <span asp-validation-for="FieldIds" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                                        <input asp-action="Relocate" asp-controller="@eventType" type="submit" value="Relocate" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <h6>Field(s)</h6>
                    @string.Join(", ", this.Model.Fields.Select(f => f.Name))
                </li>
            </ul>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/RecurrenceForm.js"></script>
}

