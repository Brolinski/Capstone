@using Microsoft.AspNetCore.Identity;

@inject UserManager<User> UserManager;
@model IEnumerable<User>

@{
    this.ViewData["Title"] = "Users";
}

<div class="text-center mb-3 mt-3">
    <div class="linkElement">
        <a asp-action="Register" asp-controller="Identity" class="mainButton">
            Register New User
        </a>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th colspan="2">Email</th>
                <th class="text-center">Admin</th>
                <th></th>
                <th scope="col" colspan="3" class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in this.Model)
            {
                <tr>
                    <th>@user.ToString()</th>
                    <td colspan="2">@user.Email</td>
                    <td class="text-center">
                        @if (this.UserManager.IsInRoleAsync(user, Role.ADMIN).Result)
                        {
                            <span>✔</span>
                        }
                    </td>
                    <td colspan="2" class="text-end">
                        @if (this.UserManager.GetUserAsync(User).Result?.Id != user.Id)
                        {
                            <form asp-action="AdminResetPassword"
                                  asp-controller="Identity"
                                  asp-route-id="@user.Id"
                                  method="post">
                                  <div class="linkElement">
                                    <button type="submit"
                                            class="button buttonYellow">
                                        Reset Password
                                    </button>
                                  </div>
                            </form>
                        }
                    </td>
                    <td class="text-center">
                        <form action="@this.Url.Action("Profile", "Identity", new { id = user.Id })" method="get">
                            <button type="submit" class="button buttonRedOutline w-100">Update</button>
                        </form>
                    </td>
                    <td>
                        @if (this.UserManager.GetUserAsync(this.User).Result?.Id != user.Id)
                        {
                            <button type="button" class="button buttonRed" data-bs-toggle="modal" data-bs-target="#remove@(user.Id)">
                                Remove
                            </button>
                            <div class="modal fade" id="remove@(user.Id)" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">@user.ToString()</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            Are you sure you want to remove @(user.ToString())?
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="button buttonRedOutline" data-bs-dismiss="modal">Close</button>
                                            <form asp-action="Delete"
                                                  asp-controller="Identity"
                                                  asp-route-id="@user.Id"
                                                  method="post">
                                                <input type="submit" value="Remove" class="button buttonRed" />
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>