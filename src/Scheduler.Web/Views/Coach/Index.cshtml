@using Scheduler.Web.Controllers;
@using Scheduler.Core.Models;
@using Scheduler.Core.Services;
@using System.Security.Claims;

@inject ITeamService teamService;
@inject IFieldService fieldService;
@model IEnumerable<Event>;

@{
    ViewData["Title"] = "Coach Dashboard";
}

<div class="m-auto text-danger">
    <h1 class="text-center">
        @this.ViewData["Title"]
    </h1>
</div>
<hr />
<!--Top Buttons-->
<div class="row w-75 text-center m-auto">
    <div class="col-sm-3 m-auto">
        <a asp-controller="Team" asp-action="Index" class="btn btn-sm btn-primary">
            Manage TEAMS
        </a>
    </div>
    <div class="col-sm-3 m-auto">
        <a asp-controller="Schedule" asp-action="Index" class="btn btn-sm btn-primary">
            Games/Practices
        </a>
    </div>
</div>
<hr />
<div class="container mb-2">
    <div class="text-center text-danger">
        <h3>Current Scheduled Events</h3>
    </div>
    <div class="row">
        <div class="col-6 border border-2 searchContainer">
            <div class="text-center text-danger">
                <h5>Games</h5>
            </div>
            <hr />
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Home Team</th>
                        <th scope="col">Opposing Team</th>
                        <th scope="col">Date</th>
                    </tr>
                </thead>
                <tbody>
                    @if (this.Model.OfType<Game>() != null)
                    {
                        foreach (var game in this.Model.OfType<Game>())
                        {
                            if (game.UserId.ToString() == this.User.FindFirst(ClaimTypes.NameIdentifier)!.Value)
                            {
                                <tr>
                                    <td>@teamService.GetAsync(game.HomeTeamId).Result.Name</td>
                                    <td>@teamService.GetAsync(game.OpposingTeamId).Result.Name</td>
                                    <td>@game.StartDate</td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="col-6 border border-2 searchContainer">
            <div class="text-center text-danger">
                <h5>Practices</h5>
            </div>
            <hr />
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th scope="col">Team</th>
                        <th scope="col">Date</th>
                    </tr>
                </thead>
                <tbody>
                    @if (this.Model.OfType<Practice>() != null)
                    {
                        foreach (var game in this.Model.OfType<Practice>())
                        {
                            if (game.UserId.ToString() == this.User.FindFirst(ClaimTypes.NameIdentifier)!.Value && game != null)
                            {
                                <tr>
                                    <td>@teamService.GetAsync(game.TeamId).Result.Name</td>
                                    <td>@game.StartDate</td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

