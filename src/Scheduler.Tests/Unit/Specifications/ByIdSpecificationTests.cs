using Scheduler.Domain.Models;
using Scheduler.Domain.Specifications;
using Xunit;

namespace Scheduler.Tests.Unit.Specifications;

/// <summary>
/// Tests for <see cref="ByIdSpecification{TEntity}"/>.
/// </summary>
public sealed class ByIdSpecificationTests
{
	/// <summary>
	/// <see cref="Entity"/> subclass for testing purposes.
	/// </summary>
	private sealed record ExampleEntity : Entity;

	/// <summary>
	/// Asserts that given the correct identifier, the specification is satisfied.
	/// </summary>
	[Fact]
	public void Id_Correct()
	{
		ExampleEntity entity = new();
		Guid id = entity.Id;
		ByIdSpecification<ExampleEntity> spec = new(id);

		bool result = spec.IsSatisifiedBy(entity);

		Assert.True(result);
	}

	/// <summary>
	/// Asserts that given the incorrect identifier, the specification will mpt be satisfied.
	/// </summary>
	/// <remarks>The test has an extremely low chance of passing of the generated GUID matches the one generated by object init.</remarks>
	[Fact]
	public void Id_Incorrect()
	{
		ExampleEntity entity = new();
		Guid id = Guid.NewGuid();
		ByIdSpecification<ExampleEntity> spec = new(id);

		bool result = spec.IsSatisifiedBy(entity);

		Assert.False(result);
	}
}

